name: SonarCloud Analysis - Backend and Frontend

on:
  push:
    branches: [main]
  pull_request:
    types: [opened, synchronize, reopened]
    branches: [main]

jobs:
  backend:
    name: Analyze Backend (.NET)
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0.x'

      - name: Install SonarScanner for .NET
        run: dotnet tool install --global dotnet-sonarscanner

      - name: Restore dependencies
        run: dotnet restore ./backend/FarmaDigitalBackend/FarmaDigitalBackend.sln

      - name: Run SonarCloud Analysis for Backend
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          export PATH="$PATH:/home/runner/.dotnet/tools"
          cd backend
          dotnet-sonarscanner begin /k:"farmadigital_FarmaDigital" /o:"farmadigital" /d:sonar.token="${{ secrets.SONAR_TOKEN }}" /s:sonar-project.properties
          dotnet build FarmaDigitalBackend/FarmaDigitalBackend.sln
          dotnet-sonarscanner end /d:sonar.token="${{ secrets.SONAR_TOKEN }}"

  frontend:
    name: Analyze Frontend (Next.js)
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install dependencies
        run: cd frontend && npm ci

      - name: Run SonarCloud Analysis for Frontend
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          cd frontend
          npx sonar-scanner \
            -Dproject.settings=sonar-project.properties \
            -Dsonar.token=${{ secrets.SONAR_TOKEN }}

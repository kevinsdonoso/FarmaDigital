name: SonarCloud Analysis

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  analyze-backend:
    name: SonarCloud Backend
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0.x'

      - name: Restore dependencies
        run: dotnet restore ./backend/FarmaDigitalBackend.sln

      - name: Install SonarScanner for .NET
        run: dotnet tool install --global dotnet-sonarscanner

      - name: Run SonarCloud analysis
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          export PATH="$PATH:/home/runner/.dotnet/tools"
          cd backend
          dotnet-sonarscanner begin /k:"kevinsdonoso_FarmaDigital" /o:"farmadigital" /d:sonar.token="${{ secrets.SONAR_TOKEN }}"
          dotnet build FarmaDigitalBackend.sln
          dotnet-sonarscanner end /d:sonar.token="${{ secrets.SONAR_TOKEN }}"

  analyze-frontend:
    name: SonarCloud Frontend
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install dependencies
        run: |
          cd frontend
          npm install

      - name: Run SonarCloud analysis
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          cd frontend
          npx sonar-scanner \
            --define sonar.login="${{ secrets.SONAR_TOKEN }}" \
            --define sonar.projectKey="kevinsdonoso_FarmaDigital" \
            --define sonar.organization="farmadigital" \
            --define sonar.sources=. \
            --define sonar.exclusions=**/node_modules/**,**/.next/** \
            --define sonar.host.url="https://sonarcloud.io"

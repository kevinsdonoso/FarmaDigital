name: SonarCloud Analysis

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]
    branches:
      - main

jobs:
  sonarcloud:
    name: SonarCloud Backend + Frontend
    runs-on: ubuntu-latest

    env:
      SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0.x'

      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install frontend dependencies
        run: |
          cd frontend
          npm install

      - name: Restore backend dependencies
        run: dotnet restore ./backend/FarmaDigitalBackend.sln

      - name: Build backend project
        run: dotnet build --no-restore ./backend/FarmaDigitalBackend.sln

      - name: Install SonarScanner for .NET
        run: dotnet tool install --global dotnet-sonarscanner

      - name: Run SonarCloud analysis
        run: |
          export PATH="$PATH:/home/runner/.dotnet/tools"
          dotnet-sonarscanner begin /k:"farmadigital_FarmaDigital" /o:"farmadigital" /d:sonar.login="${SONAR_TOKEN}"
          dotnet build ./backend/FarmaDigitalBackend.sln
          dotnet-sonarscanner end /d:sonar.login="${SONAR_TOKEN}"

      - name: Run SonarScanner for frontend
        run: |
          cd frontend
          npx sonar-scanner \
            --define sonar.login="${SONAR_TOKEN}" \
            --define sonar.projectKey="farmadigital_FarmaDigital" \
            --define sonar.organization="farmadigital"
